name: MLOps_test_train

on:
  # Runs on pushes targeting main branch
  push:
    branches:
      - main
jobs:
  generate-matrix:
    runs-on: ubuntu-latest
    outputs:
       matrix: ${{ steps.extract-matrix.outputs.matrix }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Extract martix
        id: extract-matrix
        run: |
          pip install pyyaml==6.0.2
          python3.11 src/martix.py > matrix.json
          matrix=$(cat matrix.json | jq -c .)
          echo "matrix=$matrix" >> $GITHUB_OUTPUT

      - name: Debug generated matrix
        run: cat matrix.json

  data-train-evaluate:
    runs-on: ubuntu-latest
    needs: generate-matrix
    strategy:
      matrix: ${{ fromJson(needs.generate-matrix.outputs.matrix) }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install dependencies
        run: pip install --requirement requirements-freeze.txt

      - name: Set API Key bento
        run: |
          bentoml cloud login --api-token ${{ secrets.BENTO_API_KEY }}
          bentoml cloud update-current-context default

      - name: Check file in
        run: |
          echo "Data train in:"
          ls -R model
          ls -R evaluation

      - name: Prepare Data
        run: |
          python3.11 src/prepare.py data/prepared ${{ matrix.model }}

      - name: Train Model for ${{ matrix.model }}
        run: |
          python3.11 src/train.py data/prepared ${{ matrix.model }}

      - name: Evaluate Model for ${{ matrix.model }}
        run: |
          python3.11 src/evaluate.py ${{ matrix.model }} data/prepared

      - name: Check file out
        run: |
          echo "Data train out"
          ls -R model
          ls -R evaluation

      - name: Upload evaluation
        uses: actions/upload-artifact@v4
        with:
          name: ev-${{ matrix.model }}
          path: |
            evaluation/${{ matrix.model }}
          overwrite: true

      - name: Upload model
        uses: actions/upload-artifact@v4
        with:
          name: model-${{ matrix.model }}
          path: |
            model/${{ matrix.model }}
          overwrite: true

  compar-merge:
    runs-on: ubuntu-latest
    needs: data-train-evaluate 

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install dependencies
        run: pip install --requirement requirements-freeze.txt

      - name: Set API Key bento
        run: |
          bentoml cloud login --api-token ${{ secrets.BENTO_API_KEY }}
          bentoml cloud update-current-context default

      - name: Download evaluation 
        uses: actions/download-artifact@v4
        with:
          pattern: ev-*
          path: |
            evaluation
  
      - name: Download model 
        uses: actions/download-artifact@v4
        with:
          pattern: model-*
          path: |
            model

      - name: Aggregate data
        run: |
          echo "Aggregating data:"
          ls -R model
          ls -R evaluation
  
      - name: Compare and select model
        run: |
          python3.11 src/compare.py evaluation

      - name: Merge test branch into main
        if: success()  
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global http.postBuffer 157286400  # 150 MB
          git add -f model/model-modelBest
          git add -f model/list_model.json
          git add -f evaluation/ev-modelBest
          git add -f evaluation/weighted_metrics_heatmap.png
          git add -f evaluation/report.html
          git commit -m "Add all trained models and evaluations"
          git push origin main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
